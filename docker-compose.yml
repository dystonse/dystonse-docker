version: "3.3"
services:
  db:
    image: mysql:8
    env_file:
      - .env
    volumes:
      - dbvolume:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5
    ports:
      - 8080:80
    volumes:
      - /sessions
    depends_on:
      - db
    environment:
      PMA_HOST: db
  
  dystonse-gtfs-data:
    build: https://github.com/dystonse/dystonse-gtfs-data.git
    # while developing on dystonse-gtfs-data, you can use this line instead:
    # build: ../dystonse-gtfs-data
    image: dystonse-gtfs-data:local
    command: echo "hello world from dystonse-gtfs-data!"
    # here, we build an image that does (almost) nothing 
    # but that other containers can use as a parent image
  
# collect-, import-, and analyse-services for all sources are defined in docker-compose.override.yml

volumes:
  dbvolume:
  filevolume:

# If you want easy access to the files, we recommend using bind mounts from 
# the host's file system instead of internal docker volumes.
# Caution: only do this if your host's file system supports 
# filenames containing ':' (e.g. Ext file system)!
# The syntax for named bind mounts looks like this:

# volumes:
#   dbvolume:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /home/dystonse/dbvolume
#   filevolume:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /home/dystonse/filevolume