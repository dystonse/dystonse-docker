version: "3.3"
services:

# vbn (verkehrsverbund bremen/niedersachen) services:

  collect-vbn:
    build: ./collect
    env_file:
      - global.env
      - vbn.env
    volumes:
      - filevolume:/files

  import-vbn:
    image: dystonse-gtfs-data:local
    env_file: 
      - global.env
      - vbn.env
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ import --record --predict --cleanup automatic"

  analyse-vbn:
    build: ./analyse
    env_file:
      - global.env
      - vbn.env
    volumes:
      - filevolume:/files
    depends_on:
      - db

  monitor-vbn:
    image: dystonse-gtfs-data:local
    env_file: 
      - global.env
      - vbn.env
    ports:
      - 3000:3000
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ monitor"

# vbb (Berlin, testbetrieb!)

  collect-vbb:
    build: ./collect
    env_file:
      - global.env
      - vbb.env
    volumes:
      - filevolume:/files

  import-vbb:
    image: dystonse-gtfs-data:local
    env_file: 
      - global.env
      - vbb.env
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ import --record --predict --cleanup automatic"


  analyse-vbb:
    build: ./analyse
    env_file:
      - global.env
      - vbb.env
    volumes:
      - filevolume:/files
    depends_on:
      - db

  monitor-vbb:
    image: dystonse-gtfs-data:local
    env_file: 
      - global.env
      - vbb.env
    ports:
      - 3001:3000
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ monitor"


# vvs (Stuttgart, inoffiziell!)

  collect-vvs:
    build: ./collect
    env_file:
      - global.env
      - vvs.env
    volumes:
      - filevolume:/files

  import-vvs:
    image: dystonse-gtfs-data:local
    env_file: 
      - global.env
      - vvs.env
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ import --record --predict --cleanup automatic"


  analyse-vvs:
    build: ./analyse
    env_file:
      - global.env
      - vvs.env
    volumes:
      - filevolume:/files
    depends_on:
      - db

  monitor-vvs:
    image: dystonse-gtfs-data:local
    env_file: 
      - global.env
      - vvs.env
    ports:
      - 3002:3000
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ monitor"



# vrn (verkehrsverbund rhein-neckar) services:

# collect-vrn:
#    build: ./collect
#    env_file:
#      - global.env
#      - vrn.env
#    volumes:
#      - filevolume:/files
#
#  import-vrn:
#    image: dystonse-gtfs-data:local
#    env_file:
#      - global.env
#      - vrn.env
#    volumes:
#      - filevolume:/files
#    depends_on:
#      - db
#    command: sh -c "dystonse-gtfs-data  -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ import --record --predict --cleanup automatic"
#
#  analyse-vrn:
#    build: ./analyse
#    env_file:
#      - global.env
#      - vrn.env
#    volumes:
#      - filevolume:/files
#    depends_on:
#      - db
#
#  monitor-vrn:
#    image: dystonse-gtfs-data:local
#    env_file: 
#      - global.env
#      - vrn.env
#    ports:
#      - 3003:3000
#    volumes:
#      - filevolume:/files
#    depends_on:
#      - db
#    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ monitor"


# hvv (hambzrger verkehrsverbund) services:

  collect-hvv:
    build: ./collect
    env_file:
      - global.env
      - hvv.env
    volumes:
      - filevolume:/files

  import-hvv:
    image: dystonse-gtfs-data:local
    env_file:
      - global.env
      - hvv.env
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data  -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ import --record --predict --cleanup automatic"

  analyse-hvv:
    build: ./analyse
    env_file:
      - global.env
      - hvv.env
    volumes:
      - filevolume:/files
    depends_on:
      - db

  monitor-hvv:
    image: dystonse-gtfs-data:local
    env_file: 
      - global.env
      - hvv.env
    ports:
      - 3004:3000
    volumes:
      - filevolume:/files
    depends_on:
      - db
    command: sh -c "dystonse-gtfs-data -v --password $$MYSQL_PASSWORD --dir /files/$$GTFS_DATA_SOURCE_ID/ monitor"
